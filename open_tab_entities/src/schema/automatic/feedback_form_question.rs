//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.10

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "feedback_form_question")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub feedback_form_id: Uuid,
    #[sea_orm(primary_key, auto_increment = false)]
    pub feedback_question_id: Uuid,
    pub index: i32,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::feedback_form::Entity",
        from = "Column::FeedbackFormId",
        to = "super::feedback_form::Column::Uuid",
        on_update = "Cascade",
        on_delete = "Cascade"
    )]
    FeedbackForm,
    #[sea_orm(
        belongs_to = "super::feedback_question::Entity",
        from = "Column::FeedbackQuestionId",
        to = "super::feedback_question::Column::Uuid",
        on_update = "Cascade",
        on_delete = "Cascade"
    )]
    FeedbackQuestion,
}

impl Related<super::feedback_form::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::FeedbackForm.def()
    }
}

impl Related<super::feedback_question::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::FeedbackQuestion.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
